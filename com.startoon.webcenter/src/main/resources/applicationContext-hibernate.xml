<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
   
   <!-- Hibernate SessionFactory -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="hibernateProperties" ref="hibernateProperties" />
      <property name="namingStrategy" ref="namingStrategy" />
      <property name="packagesToScan"><!-- 扫描包路径，支持通配形式com.**.example -->
         <list>
            <value>org.j2eeframework.**.entity</value>
         </list>
      </property>
   </bean>
   
   <!-- HibernateDAO的通用实现，实现了DAO层的通用实现，所有的DAO都继承此类 -->
   <bean id="genericHibernateDAO" abstract="true" class="org.j2eeframework.commons.dao.hibernate.GenericHibernateDAO">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   
   <!-- 适配数据库与Java命名规则 -->
   <bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy"></bean>
   
   <!-- Hibernate配置属性 -->
   <bean name="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
      <property name="properties">
         <props>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
            <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
            <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
            <prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop><!-- 指定释放连接模式 -->
            <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
            <prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            <prop key="hibernate.format_sql">${hibernate.format_sql}</prop><!-- 格式化SQL输出，更易于阅读 -->
            <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop><!-- 把注释放在SQL语句内,来提示他的出处 -->
            <!-- 是否创建数据库 -->
            <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
         </props>
      </property>
   </bean>
   
   <!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>
